<?php

return [
    'id' => 'Id',
    'id__placeholder' => 'id',
    'membership_start' => 'Membership Start',
    'membership_start__placeholder' => 'membership start',
    'membership_end' => 'Membership End',
    'membership_end__placeholder' => 'membership end',
    'membership_charge_date' => 'Membership Charge Date',
    'membership_charge_date__placeholder' => 'membership charge date',
    'membership_charge' => 'Membership Charge',
    'membership_charge__placeholder' => 'membership charge',
    'membership_object' => 'Membership Object',
    'membership_object__placeholder' => 'membership object',
    'product_id' => 'Product',
    'product_id__placeholder' => 'Select product',
    'plan_id' => 'Plan',
    'plan_id__placeholder' => 'Select plan',
    'created_by' => 'Created By',
    'created_by__placeholder' => 'Select created by',
    'created_at' => 'Created At',
    'created_at__placeholder' => 'created at',
    'updated_at' => 'Updated At',
    'updated_at__placeholder' => 'updated at',
    'access_token_with_bearer' => 'The access token prefixed with the "Bearer " key word.',
    'index_route_description' => 'Retrieve existing transactions.',
    'index_route_response_description' => 'The API\'s response will be JSON based data. The JSON object will be structured as follow',
    'the_key_is_the_model_property_and_the_value_is_the_model_value' => 'The array\'s key is the transaction property name where the value is the assigned value to the retrieved transaction.',
    'link_to_retrieve_first_page' => 'Link to retrieve first page.',
    'link_to_retrieve_last_page' => 'Link to retrieve last page.',
    'link_to_retrieve_previous_page' => 'Link to retrieve previous page.',
    'link_to_retrieve_next_page' => 'Link to retrieve next page.',
    'the_number_of_current_page' => 'The number of current page.',
    'the_index_of_the_first_retrieved_item' => 'The index of first retrieved transaction.',
    'the_number_of_the_last_page' => 'The number of the last page.',
    'the_base_link_to_the_resource' => 'The base link to the api resource.',
    'the_number_of_models_per_page' => 'The number of transactions per page.',
    'the_index_of_the_last_retrieved_item' => 'The index of last retrieved transaction.',
    'the_total_of_available_pages' => 'The total of the available pages.',
    'store_route_description' => 'Create new transaction.',
    'store_route_response_description' => 'The API\'s response will be JSON based data. The JSON object will be structured as follow',
    'update_route_description' => 'Update existsing transaction.',
    'update_route_response_description' => 'The API\'s response will be JSON based data. The JSON object will be structured as follow',
    'show_route_description' => 'Retrieve existsing transaction.',
    'show_route_response_description' => 'The API\'s response will be JSON based data. The JSON object will be structured as follow',
    'the_id_of_model_to_retrieve' => 'The unique id of the transaction to retrieve',
    'destroy_route_description' => 'Delete existsing transaction.',
    'destroy_route_response_description' => 'The API\'s response will be JSON based data. The JSON object will be structured as follow',
    'the_id_of_model_to_delete' => 'The id of the transaction to delete.',
    'general_description' => 'Allows you to list, create, edit, show and delete transactions.',
    'indicate_whether_the_request_was_successful_or_not' => 'Indicate whether the request was successful or not.',
    'the_id_of_the_model' => 'The id of the transaction.',
    'this_parameter_must_be_present_in_the_request' => 'This parameter must be present in the request.',
    'the_request_failed_validation' => 'The request failed validation.',
    'list_of_the_invalid_errors' => 'List of the invalid errors.',
    'the_requested_model_does_not_exists' => 'The requested transaction does not exists.',
    'the_user_does_not_have_permission_to_access_the_requested_resource' => 'User does not have permission to access the requested resource.',

];
